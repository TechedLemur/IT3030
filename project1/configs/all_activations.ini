[network]
# Options: MSE, CrossEntropy
LOSS_FUNCTION = MSE  
L1_ALPHA = 0.000005 
L2_ALPHA = 0.00000
SOFTMAX = 0


[layers]
# inDimension, outDinmension, learningRate, activation, initial_weight_range
# possible activation functions: ReLu, Sigmoid, Linear, TanH
# Please ensure that output dimension of layer N is equal to input dimension of layer N+1

input_layer = 256, 150, 0.002, Linear, -0.5 : 0.5
h1          = 150, 100, 0.002, ReLu, -0.5 : 0.5
h2          = 100, 50, 0.003, TanH, -0.5 : 0.5
output      = 50, 4, 0.003, Sigmoid, -0.5 : 0.5



[dataset]

# Total dataset size
DATASET_SIZE = 600

TEST_SET_PORTION = 0.1
VALIDATION_SET_PORTION = 0.1

# Probability for pixels to be inverted
NOISE_PROBABILITY = 0.02

# Side lenght for the square images
IMAGE_SIZE = 16

# Position bundaries for the center of cross/circle, and the position of the horizontal/vertical bars
X_RANGE = 5, 11
Y_RANGE = 5, 11

# Radius range for circle and cross
RADIUS_RANGE = 3, 7  
  # Boundaries for the drawing of vertical and horizontal bars
SIDE_BOUNDARIES = 0, 16


[run]
EPOCHS = 100
# Around 1m 10s runtime

